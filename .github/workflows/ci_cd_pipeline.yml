name: ci-cd-pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['*']
  repository_dispatch:
    types: [cms-update]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Upload node_modules artifact
        uses: actions/upload-artifact@v3
        with:
          name: node-modules
          path: node_modules

  
  prettier:
    runs-on: ubuntu-latest
    needs: install 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node-modules
          path: node_modules

      - name: Run Prettier check
        run: npx prettier --check "**/*.{js,ts,jsx,tsx,css,md,json}"

  lint:
    runs-on: ubuntu-latest
    needs: install 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node-modules
          path: node_modules

      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node-modules
          path: node_modules

      - name: Run Jest tests with coverage
        run: npm test -- --coverage

  build:
    runs-on: ubuntu-latest
    needs: [prettier, lint, test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    env:
      CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
      CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
      CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node-modules
          path: node_modules

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    env:
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: out

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Deploy to Netlify
        run: npx netlify-cli deploy --dir=out --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod

      
